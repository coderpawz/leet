/**
 * @param {number[]} nums
 * @return {number}
 */
/*var findMin = function(nums, minSoFar) {
    'use strict';
    const size = nums.length;
    minSoFar = typeof minSoFar === 'undefined' ? Infinity : minSoFar;

    if(size === 1) {
        return Math.min(nums[0], minSoFar);
    }
    if(size === 2) {
        return Math.min(nums[0], nums[1], minSoFar);
    }

    const mid = Math.floor(size / 2);
    minSoFar = Math.min(nums[mid], minSoFar);
    const right = nums.slice(mid+1);
    const left = nums.slice(0, mid);
    const leftIsOrdered = left[0] <= left[left.length - 1];
    const rightIsOrdered = right[0] <= right[right.length - 1];

    if(leftIsOrdered && !rightIsOrdered) {
        return findMin(right, minSoFar);
    } else if(rightIsOrdered && !leftIsOrdered) {
        return findMin(left, minSoFar);
    } else  {
        return Math.min(left[0], right[0], minSoFar);
    }
};*/
function findMin(nums) {
    if (nums === null || nums.length === 0) {
        return -1;
    }

    let start = 0;
    let end = nums.length - 1;
    while (start + 1 < end) {
        const mid = start + Math.floor((end - start) / 2);
        if (nums[mid] === nums[end]) {
            // if mid equals to end, that means it's fine to remove end
            // the smallest element won't be removed
            end--;
        } else if (nums[mid] < nums[end]) {
            end = mid;
            // of course you can merge == & <
        } else {
            start = mid;
            // or start = mid + 1
        }
    }

    if (nums[start] <= nums[end]) {
        return nums[start];
    }
    return nums[end];
}

console.log('[1,1]');
console.log('actual:   ' + findMin([1,1]) + '\nexpected: 1');
console.log();

console.log('[1,2,3,4,5]');
console.log('actual:   ' + findMin([1,2,3,4,5]) + '\nexpected: 1');
console.log();

console.log('[4,5,1,2,3]');
console.log('actual:   ' + findMin([4,5,1,2,3]) + '\nexpected: 1');
console.log();

console.log('[1,2,3,4,5]');
console.log('actual:   ' + findMin([1,2,3,4,5]) + '\nexpected: 1');
console.log();

console.log('[4,5,1,2,3]');
console.log('actual:   ' + findMin([4,5,1,2,3]) + '\nexpected: 1');
console.log();

console.log('[1,2,3,4,4,4,4,4,4,4,4,4,5]');
console.log('actual:   ' + findMin([1,2,3,4,4,4,4,4,4,4,4,4,5]) + '\nexpected: 1');
console.log();

console.log('[4,4,4,4,4,5,1,2,3,4,4,4,4]');
console.log('actual:   ' + findMin([4,4,4,4,4,5,1,2,3,4,4,4,4]) + '\nexpected: 1');
console.log();

console.log('[3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,1,2,3,3,3,3,3,3,3,3,3,3]');
console.log('actual:   ' + findMin([3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,1,2,3,3,3,3,3,3,3,3,3,3]) + '\nexpected: 1');
console.log();

console.log('[1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5]');
console.log('actual:   ' + findMin([1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5]) + '\nexpected: 1');
console.log();

console.log('[1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,7]');
console.log('actual:   ' + findMin([1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,7]) + '\nexpected: 1');
console.log();

console.log('[3,3,3,3,3,4,4,4,4,4,4,4,4,4,7,1,2,3,3,3,3,3,3,3,3,3,3]');
console.log('actual:   ' + findMin([3,3,3,3,3,4,4,4,4,4,4,4,4,4,7,1,2,3,3,3,3,3,3,3,3,3,3]) + '\nexpected: 1');
console.log();

console.log('[1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,7]');
console.log('actual:   ' + findMin([1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,7]) + '\nexpected: 1');
console.log();

console.log('[3,3,3,3,3,4,4,4,4,4,4,4,4,4,7,1,2,3,3,3,3,3,3,3,3,3,3]');
console.log('actual:   ' + findMin([3,3,3,3,3,4,4,4,4,4,4,4,4,4,7,1,2,3,3,3,3,3,3,3,3,3,3]) + '\nexpected: 1');
console.log();

console.log('[1,1,1,1,1,1,1,1,1]');
console.log('actual:   ' + findMin([1,1,1,1,1,1,1,1,1]) + '\nexpected: 1');
console.log();

console.log('[1,3,1,1,1]');
console.log('actual:   ' + findMin([1,3,1,1,1]) + '\nexpected: 1');
console.log();

console.log('[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]');
console.log('actual:   ' + findMin([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]) + '\nexpected: 1');
console.log();

console.log('[3,3,3,3,3,3,3,3,1,3]');
console.log('actual:   ' + findMin([3,3,3,3,3,3,3,3,1,3]) + '\nexpected: 1');
console.log();

console.log('[3,1,3]');
console.log('actual:   ' + findMin([3,1,3]) + '\nexpected: 1');
console.log();

console.log('[2,2,2,0,2,2]');
console.log('actual:   ' + findMin([2,2,2,0,2,2]) + '\nexpected: 0');
console.log();
